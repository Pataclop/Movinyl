#include <opencv2/core.hpp>
#include <opencv2/imgproc.hpp>
#include <opencv2/highgui.hpp>
#include <stdio.h>
#include <stdlib.h>
#include <string>
using namespace cv;
#include <iostream>
#include <opencv2/core/core.hpp>
#include <opencv2/highgui/highgui.hpp>
#include <opencv2/imgproc/imgproc.hpp>
#include <time.h>

/*
			IT IS IMPORTANT TO KEEP A SAVING OF THE CIRCLE PICTURE SO YOU CAN CHANGE THE PAGE LAYOUT 
								WITHOUT HAVING TO REPROCESS A MOVIE*/

//takes 5 colors and creates 5 colored discs, each fitted inside a round grey border.
void palette( Mat img)
{
	Mat tmp;
	Mat colorPalette = imread("palette.png");
	colorPalette.convertTo(tmp, CV_8UC3);
	Mat insetImage(img, Rect(0, 7000, tmp.cols, tmp.rows));
	tmp.copyTo(insetImage);
}

//Here starts the page assembly.
//Here we just assemble multiple images. There is the disc, the name of the movie, year, realisator, and durration.
//since opencv doesn't support third party fonts (as far as I know), all these pictures were created in python.
void insert_in_frame(std::string name)
{
	Mat img;
	std::string s = name;
	s += ".png";
	std::cout << "Now processing : " << s << "\n";
	Mat ims = imread(s);

	ims.convertTo(img, CV_8UC3);

	int rows = img.rows;
	int cols = img.cols;
	int H = cols * 2;
	int W = rows + (rows / 4);
	Mat out = Mat(H, W, CV_8UC3, Scalar(0, 0, 0));
	img.convertTo(img, CV_8UC3);

	img.copyTo(out(cv::Rect((W / 2) - cols / 2, (H / 2) - rows / 2, cols, rows)));

	//I think this was from when I tried to extract colors automaticaly. not sure, so not removing rn
	Mat tmp;
	resize(img, tmp, Size(1000, 1000), INTER_NEAREST);
	tmp.convertTo(tmp, CV_8UC4);
	//
	
	//here we generate the picture containing the 5 colored circles.

	//these images were generated by a python script.
	Mat titre = imread("titre.png");
	Mat annee = imread("année.png");
	Mat real = imread("réalisateur.png");
	Mat duree = imread("durée.png");

	//the size of the pictures is determined in the pithon file, thought for a 8000x5000 image.
	//the positioning is ajustable, I find it nice this way.
	titre.copyTo(out(cv::Rect(0, H / 10, W, 600)));
	annee.copyTo(out(cv::Rect(0, (H / 8) + 400, W, 600)));
	real.copyTo(out(cv::Rect(0, (H / 2) + (rows / 2) + (rows / 20), W, 600)));
	duree.copyTo(out(cv::Rect(0, (H / 2) + (rows / 2) + (rows / 20) + 400, W, 600)));
	palette(out);
	std::string s_out = name;
	s_out += "_page.png";

	imwrite(s_out, out);
}

int main(int argc, char const *argv[])
{
	std::string name = argv[1];
	name.erase(std::remove(name.begin(), name.end(), '\"'), name.end());
	insert_in_frame(name);
	return 0;
}
